html,
body {
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  user-select: none;
}

body {
  color: white;
  transition: background-color 0.5s ease-out;

  &::after {
    opacity: 0; /* fade out loading banner */
  }
}

div {
  display: initial; /* was hidden in index.html for startup */
}

canvas {
  position: absolute;
}

.desc {
  font-size: 37px;
  display: block;
  position: fixed;
  bottom: 0;
  left: 0;
  padding: 11px;
  > ::after, ::before {
    display: block;
  }
  .d1::before {
    content: 'Bring your cat to a synthesizer.';
  }
}

#sky {
  position: absolute;
  color: darkslateblue;
}

#score {
  font-size: 37px;
  position: absolute;
  right: 0;
  padding: 7px 21px;
  display: flex;
  flex-direction: column;
  align-items: flex-end;

  span {
    vertical-align: top;
  }
}

.goal {
  font-weight: bold;
}

.result {
  &.bot {
    color: #bbb;
  }

  &.human {
    .cat {
      position: relative;

      &::after {
        content: '🧑‍🚀';
        font-size: 14px;
        position: absolute;
        bottom: 0;
        left: -7px;
      }
    }

    .swapped {
      animation: danger .5s infinite;
    }
  }
}

.controls {
  display: none;
}

/* modification for different game states */
.ended {
  #sky {
    opacity: 0.05;
    color: gold;
    animation: none;
  }

  &::after {
    opacity: 0.15; /* slightly fade in logo */
  }

  &.won {
    background: darkslategray;
    .d1::before {
      content: 'You won!';
    }
  }
  &.lost {
    background: darkred;
    .d1::before {
      content: 'You lost!';
    }
  }

  .d1 {
    &::before {
      content: initial;
    }
    &::after {
      content: 'Hit SPACE to continue.';
    }
  }
}

.won {
  &::after {
    content: '🏆️🐱🏆️\Ameow';
  }
}

.lost {
  &::after {
    content: '☠️🙀🔫\A#!$§#';
  }
}

.prepare[data-level] {
  &::after {
    content: '🐱🚀🎹\ALevel ' attr(data-level);
  }
}

.prepare:not(.started) {
  &::after {
    opacity: 0.2; /* fade in logo */
  }

  .d1 {
    &::after {
      content: 'Hit SPACE to start.';
    }
  }

  &.expert .d2 {
    color: gold;

    &::before {
      content: 'Wow! You are an expert. ';
    }
    &::after {
      content: 'Press 1-9 to choose your level of chaos.';
    }
  }

  &[data-level="13"] .d2 {
    &::before {
      animation: rainbow 1s infinite;
      content: 'Bonus level!';
    }
  }
}

.started {
  .desc {
    opacity: 0.5;
  }

  #score {
    span:not(.swapped) {
      opacity: 0.5;
    }
  }
}

body:not(.started) {
  #score, .desc {
    background: rgba(0, 0, 0, 0.5);
    z-index: 1;
  }
}

.click-mode {
  .controls {
    position: fixed;
    display: flex;
    align-items: center;
    justify-content: center;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    #space {
      color: gold;
      border: 1px solid gold;
      padding: 7px 37px;
      font-size: 37px;
    }

    >:not(#space) {
      display: none;
      justify-content: center;
      align-items: center;
      font-size: 91px;
      margin: 13px;
      background: rgba(255, 255, 255, 0.05);
      color: rgba(255, 255, 255, 0.3);
      width: 50%;
      height: 100%;
    }
  }

  &.started {
    #left, #right {
      display: flex;
    }
    #space {
      display: none;
    }
  }

  .keys, .d2::after {
    display: none;
  }
}

[data-color="0"] #sky {
  color: darkslateblue;
}
[data-color="1"] #sky {
  color: indigo;
}
[data-color="2"] #sky {
  color: purple;
}
[data-color="3"] #sky {
  color: saddlebrown;
}
[data-color="4"] #sky {
  color: darkslategray;
}

@keyframes rainbow {
  0% {
    color: indigo;
  }
  20% {
    color: purple;
  }
  40% {
    color: saddlebrown;
  }
  60% {
    color: darkslategray;
  }
  80% {
    color: darkslateblue;
  }
  100% {
    color: indigo;
  }
}

@keyframes danger {
  0% {
    color: white;
  }
  50% {
    color: orange;
  }
  100% {
    color: white;
  }
}
